import asyncio
import json
import os
import re
import traceback
import shutil
from playwright.async_api import async_playwright
import glob
import aiohttp
from tiktok_cookies_loader import CookiesLoader

class TikTokManager:
    def __init__(self, cookies_dir='cookies', videos_dir='videos'):
        self.cookies_dir = cookies_dir
        self.videos_dir = videos_dir
        self.cookies_loader = CookiesLoader(cookies_dir)
        self.proxy = {
            'server': 'http://109.236.82.42:9999',
            'username': 'xefrudrjaz-corp.res-country-GB-hold-session-session-6850a0db0a053',
            'password': '8tnmD7aIgSbBHSmD'
        }
        self.proxy_refresh_url = "https://api.asocks.com/user/port/refresh/ip/fc20ca0b-4b04-11f0-8ac2-bc24114c89e8"
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if not os.path.exists(videos_dir):
            os.makedirs(videos_dir)
            
    def get_first_video(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –ø—É—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É –≤–∏–¥–µ–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ."""
        video_files = glob.glob(os.path.join(self.videos_dir, '*.*'))
        video_formats = ['.mp4', '.mov', '.avi', '.mkv', '.wmv', '.flv', '.webm', '.m4v']
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤
        video_files = [f for f in video_files if os.path.splitext(f)[1].lower() in video_formats]
        
        if not video_files:
            print(f"–í –ø–∞–ø–∫–µ {self.videos_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤.")
            return None
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ –≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        video_files.sort()
        return video_files[0]
    
    async def upload_video(self, page, video_path):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ –Ω–∞ TikTok Studio.
        
        Args:
            page: –û–±—ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã Playwright
            video_path: –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        
        Returns:
            bool: True, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –ù–∞–π–¥–µ–º input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
            file_input = await page.query_selector('input[type="file"]')
            
            if file_input:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ
                abs_video_path = os.path.abspath(video_path)
                print(f"–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ: {abs_video_path}")
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
                await file_input.set_input_files(abs_video_path)
                
                print("–í–∏–¥–µ–æ –≤—ã–±—Ä–∞–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
                
                # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
                await page.wait_for_timeout(2000)
                await page.screenshot(path="tiktok_file_selected.png")
                
                # –ñ–¥–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                print("–ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...")
                await page.wait_for_timeout(8000)  # 8 —Å–µ–∫—É–Ω–¥
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º –∏–ª–∏ —à–∞–≥–æ–≤
                await self.handle_additional_forms(page)
                
                # –ü—É–±–ª–∏–∫—É–µ–º –≤–∏–¥–µ–æ
                publication_result = await self.publish_video(page)
                
                return True
                
            else:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
                return False
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {str(e)}")
            await page.screenshot(path="tiktok_upload_error.png")
            return False
            
    async def publish_video(self, page):
        """–ü—É–±–ª–∏–∫—É–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'"""
        try:
            # –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
            print("–ò—â–µ–º –∫–Ω–æ–ø–∫—É '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'...")
            publish_button = await page.query_selector('[data-e2e="post_video_button"]')
            
            if publish_button:
                print("–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'")
                await publish_button.click()
                print("–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é")
                await page.wait_for_timeout(5000)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                await page.screenshot(path="tiktok_published.png")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                success = await self.check_publication_success(page)
                if success:
                    print("–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ")
                    return True
                else:
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
                    return False
            else:
                print("–ö–Ω–æ–ø–∫–∞ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ—Ö–æ–∂–∏–º —Ç–µ–∫—Å—Ç–æ–º
                button = await page.query_selector('button:has-text("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å")')
                if button:
                    print("–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', –Ω–∞–∂–∏–º–∞–µ–º")
                    await button.click()
                    print("–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é")
                    await page.wait_for_timeout(5000)
                    await page.screenshot(path="tiktok_published.png")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                    success = await self.check_publication_success(page)
                    if success:
                        print("–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ")
                        return True
                    else:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
                        return False
                else:
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
                    await page.screenshot(path="tiktok_no_publish_button.png")
                    return False
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {str(e)}")
            await page.screenshot(path="tiktok_publish_error.png")
            return False
    
    async def handle_additional_forms(self, page):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–ª–∏ —à–∞–≥–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ä–º—ã –æ–ø–∏—Å–∞–Ω–∏—è
            description_field = await page.query_selector('textarea[placeholder*="–æ–ø–∏—Å"], textarea[placeholder*="–ù–∞–ø–∏—à"]')
            if description_field:
                print("–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –≤–∏–¥–µ–æ, –∑–∞–ø–æ–ª–Ω—è–µ–º")
                await description_field.fill("üî• #viral #trending")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ "–î–∞–ª–µ–µ" –∏–ª–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            next_button = await page.query_selector('button:has-text("–î–∞–ª–µ–µ"), button:has-text("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"), button:has-text("Next"), [data-e2e="next-button"]')
            if next_button:
                print("–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–î–∞–ª–µ–µ', –Ω–∞–∂–∏–º–∞–µ–º")
                await next_button.click()
                await page.wait_for_timeout(3000)
                
                # –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å –µ—â–µ —à–∞–≥–∏ - —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º
                await self.handle_additional_forms(page)
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º: {str(e)}")
            
    async def check_publication_success(self, page):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"""
        try:
            # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏–ª–∏ –∏—Å—Ç–µ—á–µ—Ç —Ç–∞–π–º–∞—É—Ç
            success_message = None
            try:
                # –ò—â–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                success_message = await page.wait_for_selector(
                    'text="—É—Å–ø–µ—à–Ω–æ", text="–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", text="published", text="success"', 
                    timeout=10000
                )
            except:
                pass
                
            if success_message:
                print("–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
                return True
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–∏—Å—å –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–∏–¥–µ–æ
            if '/tiktokstudio/content' in page.url or '/creator' in page.url:
                print("–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –ø—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
                return True
                
            return False
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {str(e)}")
            return False
    
    async def refresh_proxy_ip(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç IP-–∞–¥—Ä–µ—Å –ø—Ä–æ–∫—Å–∏ –ø–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º"""
        try:
            print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–∞ –ø—Ä–æ–∫—Å–∏...")
            async with aiohttp.ClientSession() as session:
                async with session.get(self.proxy_refresh_url) as response:
                    if response.status == 200:
                        response_data = await response.json()
                        if response_data.get("success"):
                            session_id = response_data.get("session")
                            login = response_data.get("login")
                            print(f"IP –ø—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω. –°–µ—Å—Å–∏—è: {session_id}")
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏–Ω –ø—Ä–æ–∫—Å–∏ —Å –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π
                            if session_id and login:
                                self.proxy['username'] = login
                                print(f"–û–±–Ω–æ–≤–ª–µ–Ω –ª–æ–≥–∏–Ω –ø—Ä–æ–∫—Å–∏: {login}")
                            
                            return True
                        else:
                            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ IP: —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—Ö=false")
                            return False
                    else:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ IP –ø—Ä–æ–∫—Å–∏. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status}")
                        return False
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ IP –ø—Ä–æ–∫—Å–∏: {str(e)}")
            return False
    
    async def process_account(self, cookie_file):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª —Å –∫—É–∫–∞–º–∏"""
        print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ —Å –∫—É–∫–∞–º–∏: {cookie_file}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
        cookies = self.cookies_loader.load_cookies(cookie_file)
        if not cookies:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ {cookie_file}")
            self.cookies_loader.mark_cookie_as_invalid(cookie_file)
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É –≤–∏–¥–µ–æ
        video_path = self.get_first_video()
        if not video_path:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–∞–ø–∫–µ videos –µ—Å—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã.")
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º IP –ø—Ä–æ–∫—Å–∏ –ø–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º
        proxy_refreshed = await self.refresh_proxy_ip()
        if not proxy_refreshed:
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å IP –ø—Ä–æ–∫—Å–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º IP")
        
        try:
            async with async_playwright() as p:
                browser = await p.firefox.launch(headless=False)
                
                context = await browser.new_context(
                    proxy=self.proxy,
                    locale='ru-RU',
                    user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36'
                )
                
                # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å cookies
                await context.add_cookies(cookies)
                page = await context.new_page()
                await page.goto("https://tiktok.com", wait_until='load')
                await page.wait_for_timeout(5000)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –º—ã
                is_authenticated = await self.check_authentication(page)
                
                if is_authenticated:
                    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏
                    await page.goto("https://www.tiktok.com/tiktokstudio/upload", wait_until='load')
                    await page.wait_for_timeout(5000)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    
                    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∫–∏
                    await page.screenshot(path="tiktok_upload_page.png")
                    
                    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
                    upload_success = await self.upload_video(page, video_path)
                    
                    if upload_success:
                        print("–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤–∏–¥–µ–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
                        self.cookies_loader.mark_cookie_as_valid(cookie_file)
                        # –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞
                        await page.wait_for_timeout(10000)  # 10 —Å–µ–∫—É–Ω–¥
                        return True
                    else:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ")
                        self.cookies_loader.mark_cookie_as_invalid(cookie_file)
                        return False
                else:
                    print("–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∫—É–∫–∞–º–∏")
                    self.cookies_loader.mark_cookie_as_invalid(cookie_file)
                    return False
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫—É–∫–æ–≤ {cookie_file}: {str(e)}")
            traceback.print_exc()
            self.cookies_loader.mark_cookie_as_invalid(cookie_file)
            return False
    
    async def check_authentication(self, page):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ TikTok"""
        try:
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            await page.screenshot(path="tiktok_auth_check.png")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            # –ù–∞–ø—Ä–∏–º–µ—Ä, –∏–∫–æ–Ω–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            profile_icon = await page.query_selector('[data-e2e="profile-icon"]')
            if profile_icon:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                return True
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ - –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ TikTok
            login_button = await page.query_selector('[data-e2e="top-login-button"]')
            if login_button:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ª–æ–≥–∏–Ω–∞")
                return False
                
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —è–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –µ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º URL
            current_url = page.url
            if '/login' in current_url:
                print("–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞")
                return False
                
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –¥–æ—Å—Ç—É–ø–Ω—É—é —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            await page.goto("https://www.tiktok.com/tiktokstudio", wait_until='load')
            await page.wait_for_timeout(3000)
            
            # –ï—Å–ª–∏ URL —Å–æ–¥–µ—Ä–∂–∏—Ç /login, –∑–Ω–∞—á–∏—Ç –Ω–∞—Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
            if '/login' in page.url:
                print("–ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ TikTok Studio –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞")
                return False
                
            print("–£—Å–ø–µ—à–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ TikTok Studio, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            return True
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")
            return False 